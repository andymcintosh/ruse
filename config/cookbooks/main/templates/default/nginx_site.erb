# upstream unicorn {
#   server unix:/tmp/unicorn.todo.sock fail_timeout=0; 
# }
# 
# server {
#   listen 80 default;
# 
#   <% if node[:hostname] %>
#     <%# server_name  <%= node[:hostname] ;%>
#   <% end %>
# 
#   access_log  <%= node[:nginx][:log_dir] %>/localhost.access.log;
# 
#   root <%= "#{node[:app_root]}/public" %>;
# 
#   try_files $uri/index.html $uri @unicorn;
#   location @unicorn {
#     proxy_pass http://unicorn;
#   }
# }

upstream unicorn {
  server unix:/tmp/unicorn.<%= node[:application][:name] %>.sock fail_timeout=0;
}

server {
  listen 80 default deferred;
  # server_name example.com;
  root <%= node[:application][:root] %>/public;

  location ~* ^/assets/ {
    gzip_static on;
    # Per RFC2616 - 1 year maximum expiry
    # http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html
    expires 1y;
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  try_files $uri/index.html $uri @unicorn;
  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://unicorn;
  }

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }
  error_page 503 @maintenance;
  location @maintenance {
    rewrite  ^(.*)$  /system/maintenance.html last;
    break;
  }

  # error_page 500 502 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;
}
